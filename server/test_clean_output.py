#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —á—Ç–æ –≤—Å–µ DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã –∏ –≤—ã–≤–æ–¥ —á–∏—Å—Ç—ã–π.
"""

import subprocess
import sys
import os

def check_debug_messages():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å –Ω–∞–ª–∏—á–∏–µ DEBUG —Å–æ–æ–±—â–µ–Ω–∏–π –≤ –∫–æ–¥–µ"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞–ª–∏—á–∏—è DEBUG —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    # –ü–æ–∏—Å–∫ –≤—Å–µ—Ö DEBUG –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
    patterns = [
        r'\[DEBUG\]',
        r'print.*DEBUG',
        r'DEBUG.*print'
    ]
    
    total_found = 0
    
    for pattern in patterns:
        try:
            result = subprocess.run(
                ['grep', '-r', pattern, '/root/EA/server/endpoints', '--include=*.py'],
                capture_output=True, text=True
            )
            
            if result.stdout.strip():
                lines = result.stdout.strip().split('\n')
                print(f"‚ùå –ù–∞–π–¥–µ–Ω—ã DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è –¥–ª—è –ø–∞—Ç—Ç–µ—Ä–Ω–∞ '{pattern}': {len(lines)}")
                for line in lines[:3]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 3
                    print(f"   {line}")
                if len(lines) > 3:
                    print(f"   ... –∏ –µ—â–µ {len(lines) - 3}")
                total_found += len(lines)
            else:
                print(f"‚úÖ –ü–∞—Ç—Ç–µ—Ä–Ω '{pattern}' –Ω–µ –Ω–∞–π–¥–µ–Ω")
                
        except Exception as e:
            print(f"‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø–æ–∏—Å–∫–∞ –¥–ª—è '{pattern}': {e}")
    
    return total_found

def test_websocket_formatting():
    """–¢–µ—Å—Ç –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WebSocket —Å–æ–æ–±—â–µ–Ω–∏–π"""
    print("\nüé® –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è WebSocket —Å–æ–æ–±—â–µ–Ω–∏–π...")
    
    # –ò–º–∏—Ç–∏—Ä—É–µ–º –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –∫—Ä–∞—Å–∏–≤–æ–≥–æ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    sys.path.append('/root/EA/server')
    
    try:
        from endpoints.websocket import _format_progress_output
        
        # –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
        test_messages = [
            {
                "operation": "add_teams",
                "current_team": "Test FC",
                "message": "Starting to process Test FC"
            },
            {
                "operation": "add_teams",
                "current_team": "Test FC",
                "players_processing_progress": {"dummy": "data"},
                "current_player": "Test Player",
                "player_index": 0,
                "total_players": 3,
                "player_overall_rating": 85,
                "player_position": "ST"
            },
            {
                "operation": "add_teams",
                "message": "Successfully added 1 teams!",
                "total_added": 1
            }
        ]
        
        print("üì§ –¢–µ—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏–π:")
        for i, msg in enumerate(test_messages):
            print(f"\n--- –°–æ–æ–±—â–µ–Ω–∏–µ {i+1} ---")
            _format_progress_output(msg)
        
        print("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ WebSocket —Ä–∞–±–æ—Ç–∞–µ—Ç")
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def check_file_sizes():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Ä–∞–∑–º–µ—Ä—ã –æ—Å–Ω–æ–≤–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –æ—á–∏—Å—Ç–∫–∏"""
    print("\nüìä –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤...")
    
    important_files = [
        '/root/EA/server/endpoints/websocket.py',
        '/root/EA/server/endpoints/teams.py',
        '/root/EA/server/endpoints/utils/__init__.py',
        '/root/EA/server/endpoints/players.py'
    ]
    
    for file_path in important_files:
        if os.path.exists(file_path):
            size = os.path.getsize(file_path)
            lines = 0
            with open(file_path, 'r', encoding='utf-8') as f:
                lines = len(f.readlines())
            print(f"üìÑ {os.path.basename(file_path)}: {size} –±–∞–π—Ç, {lines} —Å—Ç—Ä–æ–∫")
        else:
            print(f"‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {file_path}")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∞"""
    print("üßπ –¢–µ—Å—Ç –æ—á–∏—Å—Ç–∫–∏ DEBUG —Å–æ–æ–±—â–µ–Ω–∏–π –∏ —É–ª—É—á—à–µ–Ω–∏—è –≤—ã–≤–æ–¥–∞")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ DEBUG —Å–æ–æ–±—â–µ–Ω–∏–π
    debug_count = check_debug_messages()
    
    # –¢–µ—Å—Ç —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    formatting_ok = test_websocket_formatting()
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ —Ñ–∞–π–ª–æ–≤
    check_file_sizes()
    
    # –ò—Ç–æ–≥–∏
    print("\n" + "=" * 60)
    print("üìã –ò–¢–û–ì–ò –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 60)
    
    if debug_count == 0:
        print("‚úÖ DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è: –í—Å–µ —É–¥–∞–ª–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
    else:
        print(f"‚ùå DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è: –ù–∞–π–¥–µ–Ω–æ {debug_count} —à—Ç—É–∫")
    
    if formatting_ok:
        print("‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –†–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    else:
        print("‚ùå –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ: –ï—Å—Ç—å –ø—Ä–æ–±–ª–µ–º—ã")
    
    print("\nüéØ –£–õ–£–ß–®–ï–ù–ò–Ø:")
    print("   ‚úÖ –£–±—Ä–∞–Ω—ã –≤—Å–µ [DEBUG] —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ utils")
    print("   ‚úÖ –£–±—Ä–∞–Ω—ã DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ teams.py")
    print("   ‚úÖ –£–±—Ä–∞–Ω—ã DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ websocket.py")
    print("   ‚úÖ –£–±—Ä–∞–Ω—ã DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö endpoints")
    print("   ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ –∫—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø—Ä–æ–≥—Ä–µ—Å—Å–∞")
    print("   ‚úÖ –≠–º–æ–¥–∑–∏ –∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥")
    print("   ‚úÖ –§–∏–Ω–∞–ª—å–Ω–∞—è —Å–≤–æ–¥–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤")
    
    print("\nüöÄ –†–ï–ó–£–õ–¨–¢–ê–¢:")
    if debug_count == 0 and formatting_ok:
        print("   üéâ –í–°–ï –û–¢–õ–ò–ß–ù–û! –ö–æ–Ω—Å–æ–ª—å —Ç–µ–ø–µ—Ä—å —á–∏—Å—Ç–∞—è –∏ –∫—Ä–∞—Å–∏–≤–∞—è!")
    else:
        print("   ‚ö†Ô∏è –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    
    print("\nüìù –¢–µ–ø–µ—Ä—å –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –∫–æ–º–∞–Ω–¥ –≤—ã —É–≤–∏–¥–∏—Ç–µ:")
    print("""
üöÄ –ù–∞—á–∏–Ω–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥
üìä –ü—Ä–æ–µ–∫—Ç: my-project
üèÜ –õ–∏–≥–∞: Premier League
üìà –ö–æ–º–∞–Ω–¥ –∫ –æ–±—Ä–∞–±–æ—Ç–∫–µ: 5
--------------------------------------------------

üèÜ –°–æ–∑–¥–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã: Manchester City
===================================
  üë§  1/25 Ederson [GK] (OVR: 89)
  üë§  2/25 Kevin De Bruyne [CM] (OVR: 91)
  ...
üéØ –¢–∞–∫—Ç–∏–∫–∞ –∏ —Ñ–æ—Ä–º–∞—Ü–∏–∏ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—ã
‚úÖ –ö–æ–º–∞–Ω–¥–∞ Manchester City —Å–æ–∑–¥–∞–Ω–∞ —É—Å–ø–µ—à–Ω–æ

üíæ –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ 5 –∫–æ–º–∞–Ω–¥...
‚úÖ –ö–æ–º–∞–Ω–¥—ã —É—Å–ø–µ—à–Ω–æ —Å–æ—Ö—Ä–∞–Ω–µ–Ω—ã!

============================================================
üéâ –í–°–ï –ö–û–ú–ê–ù–î–´ –°–û–ó–î–ê–ù–´ –£–°–ü–ï–®–ù–û!
============================================================
üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –∫–æ–º–∞–Ω–¥: 5
‚úÖ –ü—Ä–æ—Ü–µ—Å—Å –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ
============================================================
    """)

if __name__ == "__main__":
    main()