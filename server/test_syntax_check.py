#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ –≤—Å–µ—Ö Python —Ñ–∞–π–ª–æ–≤ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è.
"""

import subprocess
import os
import sys

def check_syntax():
    """–ü—Ä–æ–≤–µ—Ä–∏—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—Å–µ—Ö Python —Ñ–∞–π–ª–æ–≤"""
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞ Python —Ñ–∞–π–ª–æ–≤...")
    print("=" * 50)
    
    endpoints_dir = "/root/EA/server/endpoints"
    server_file = "/root/EA/server/server.py"
    
    errors = []
    success = []
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º server.py
    try:
        result = subprocess.run(
            ['python3', '-m', 'py_compile', server_file],
            capture_output=True, text=True, cwd='/root/EA/server'
        )
        if result.returncode == 0:
            success.append("server.py")
            print("‚úÖ server.py")
        else:
            errors.append(f"server.py: {result.stderr}")
            print(f"‚ùå server.py: {result.stderr}")
    except Exception as e:
        errors.append(f"server.py: {e}")
        print(f"‚ùå server.py: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã –≤ endpoints/
    if os.path.exists(endpoints_dir):
        for filename in sorted(os.listdir(endpoints_dir)):
            if filename.endswith('.py'):
                filepath = os.path.join(endpoints_dir, filename)
                try:
                    result = subprocess.run(
                        ['python3', '-m', 'py_compile', filepath],
                        capture_output=True, text=True
                    )
                    if result.returncode == 0:
                        success.append(f"endpoints/{filename}")
                        print(f"‚úÖ endpoints/{filename}")
                    else:
                        errors.append(f"endpoints/{filename}: {result.stderr}")
                        print(f"‚ùå endpoints/{filename}: {result.stderr}")
                except Exception as e:
                    errors.append(f"endpoints/{filename}: {e}")
                    print(f"‚ùå endpoints/{filename}: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º utils/
    utils_dir = os.path.join(endpoints_dir, 'utils')
    if os.path.exists(utils_dir):
        for filename in sorted(os.listdir(utils_dir)):
            if filename.endswith('.py'):
                filepath = os.path.join(utils_dir, filename)
                try:
                    result = subprocess.run(
                        ['python3', '-m', 'py_compile', filepath],
                        capture_output=True, text=True
                    )
                    if result.returncode == 0:
                        success.append(f"endpoints/utils/{filename}")
                        print(f"‚úÖ endpoints/utils/{filename}")
                    else:
                        errors.append(f"endpoints/utils/{filename}: {result.stderr}")
                        print(f"‚ùå endpoints/utils/{filename}: {result.stderr}")
                except Exception as e:
                    errors.append(f"endpoints/utils/{filename}: {e}")
                    print(f"‚ùå endpoints/utils/{filename}: {e}")
    
    print("\n" + "=" * 50)
    print("üìä –†–ï–ó–£–õ–¨–¢–ê–¢–´ –ü–†–û–í–ï–†–ö–ò:")
    print("=" * 50)
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ: {len(success)} —Ñ–∞–π–ª–æ–≤")
    print(f"‚ùå –û—à–∏–±–∫–∏: {len(errors)} —Ñ–∞–π–ª–æ–≤")
    
    if errors:
        print("\nüî• –ù–ê–ô–î–ï–ù–ù–´–ï –û–®–ò–ë–ö–ò:")
        for error in errors:
            print(f"   {error}")
        return False
    else:
        print("\nüéâ –í–°–ï –§–ê–ô–õ–´ –°–ò–ù–¢–ê–ö–°–ò–ß–ï–°–ö–ò –ö–û–†–†–ï–ö–¢–ù–´!")
        return True

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è"""
    print("üßπ –§–∏–Ω–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Å–ª–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è DEBUG —Å–æ–æ–±—â–µ–Ω–∏–π")
    print("=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏–Ω—Ç–∞–∫—Å–∏—Å–∞
    syntax_ok = check_syntax()
    
    print("\n" + "=" * 60)
    print("üìã –ò–¢–û–ì–û–í–´–ô –°–¢–ê–¢–£–°:")
    print("=" * 60)
    
    if syntax_ok:
        print("‚úÖ –í—Å–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤—ã–ø–æ–ª–Ω–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        print("‚úÖ –°–∏–Ω—Ç–∞–∫—Å–∏—Å –≤—Å–µ—Ö —Ñ–∞–π–ª–æ–≤ –∫–æ—Ä—Ä–µ–∫—Ç–µ–Ω")
        print("‚úÖ DEBUG —Å–æ–æ–±—â–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω—ã")
        print("‚úÖ –ö—Ä–∞—Å–∏–≤–æ–µ —Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ–±–∞–≤–ª–µ–Ω–æ")
        print("\nüöÄ –°–µ—Ä–≤–µ—Ä –≥–æ—Ç–æ–≤ –∫ –∑–∞–ø—É—Å–∫—É!")
        print("   –ö–æ–º–∞–Ω–¥–∞: uvicorn server:app --reload")
    else:
        print("‚ùå –ï—Å—Ç—å —Å–∏–Ω—Ç–∞–∫—Å–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏")
        print("‚ö†Ô∏è –ù—É–∂–Ω—ã –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è")
    
    return syntax_ok

if __name__ == "__main__":
    success = main()
    sys.exit(0 if success else 1)